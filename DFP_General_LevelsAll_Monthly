//DFP_General_LevelsAll_Monthly_v12
//COMBINE DFP Level0 AND Level1
SELECT * FROM 

//20160830 RUN AS OK
--(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level0_, TIMESTAMP('2016-06-01'), TIMESTAMP('2016-06-30'))),
--(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level1_, TIMESTAMP('2016-06-01'), TIMESTAMP('2016-06-30')))

//20160830 RUN AS OK
--(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level0_, TIMESTAMP('2016-07-01'), TIMESTAMP('2016-07-31'))),
--(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level1_, TIMESTAMP('2016-07-01'), TIMESTAMP('2016-07-31')))

//20160831 RUN AS MONTHLY OK
--(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level0_, TIMESTAMP('2016-08-01'), TIMESTAMP('2016-08-31'))),
--(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level1_, TIMESTAMP('2016-08-01'), TIMESTAMP('2016-08-31')))

//20160906 RUN AS MONTHLY OK
(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level0_, TIMESTAMP('2016-09-01'), TIMESTAMP('2016-09-30'))),
(TABLE_DATE_RANGE( ManagedServices_DFP.DFP_GENERAL_Level1_, TIMESTAMP('2016-09-01'), TIMESTAMP('2016-09-30')))

//20160831 RUN AS 'TEST'
--ManagedServices_DFP.DFP_GENERAL_Level0_TEST_20160831,
--ManagedServices_DFP.DFP_GENERAL_Level1_TEST_20160831

WHERE TransactionDate IS NOT NULL
//Save to ManagedServices_DFP.DFP_GENERAL_LevelALL_20160x01
//IF TESTING, SAVE IN: ManagedServices_DFP.DFP_GENERAL_LevelALL_TEST_20160x01
